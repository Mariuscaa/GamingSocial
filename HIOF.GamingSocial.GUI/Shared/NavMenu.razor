@inject HIOF.GamingSocial.GUI.Services.AuthService AuthService


<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a href="/">
            <img class="gaming_social_logo normal" src="Images/gs_logo_silver.png" alt="GamingSocial silver logo">
            <img class="gaming_social_logo hover" src="Images/gs_logo_hover.png" alt="GamingSocial silver logo hover">
        </a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>


@if (AuthService.IsLoggedIn)
{
    <div class="@_navMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
        <nav class="flex-column">
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    <span class="oi oi-home" aria-hidden="true"></span> Home
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="mypage">
                    <span class="oi oi-person" aria-hidden="true"></span> My page
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="friends">
                    <span class="oi oi-people" aria-hidden="true"></span> Friends
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="my-groups">
                    <span class="oi oi-grid-two-up" aria-hidden="true"></span> Groups
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="invites">
                    <span class="oi oi-plus" aria-hidden="true"></span> Invites
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="chat">
                    <span class="oi oi-chat" aria-hidden="true"></span> Chat
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="mygames">
                    <span class="oi oi-monitor" aria-hidden="true"></span> Games
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="gametimeplanner">
                    <span class="oi oi-calendar" aria-hidden="true"></span> GameTimePlanner
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="logout">
                    <span class="oi oi-account-logout" aria-hidden="true"></span> Logout
                </NavLink>
            </div>
        </nav>
    </div>
}
else
{
    <div class="@_navMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
        <nav class="flex-column">
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    <span class="oi oi-home" aria-hidden="true"></span> Home
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="createprofile">
                    <span class="oi oi-person" aria-hidden="true"></span> Create Profile
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="login">
                    <span class="oi oi-account-login" aria-hidden="true"></span> Login
                </NavLink>
            </div>
        </nav>
    </div>
}


@code {
    private bool _collapseNavMenu = true;
    private bool _isLoggedIn = false;
    private bool firstRender = true;
    private string? _navMenuCssClass => _collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        _collapseNavMenu = !_collapseNavMenu;
    }

    protected override void OnInitialized()
    {
        AuthService.OnChange += StateHasChanged;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await AuthService.CheckLoginStatus();
        }
    }

    public void Dispose()
    {
        AuthService.OnChange -= StateHasChanged;
    }
}
